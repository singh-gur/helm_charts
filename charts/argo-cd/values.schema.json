{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ArgoCD Values",
  "description": "Schema validation for argo-cd chart values",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            },
            "tag": {
              "type": "string"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"]
            }
          }
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "securityContext": {
          "type": "object",
          "properties": {
            "runAsUser": {
              "type": "integer",
              "minimum": 0
            },
            "runAsGroup": {
              "type": "integer",
              "minimum": 0
            },
            "fsGroup": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      }
    },
    "server": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "ingress": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "hosts": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "hostname"
              }
            },
            "ingressClassName": {
              "type": "string"
            },
            "tls": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hosts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "hostname"
                    }
                  },
                  "secretName": {
                    "type": "string"
                  }
                }
              }
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "service": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["ClusterIP", "NodePort", "LoadBalancer"],
              "default": "ClusterIP"
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            "targetPort": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        },
        "config": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri"
            },
            "admin.enabled": {
              "type": "boolean"
            }
          }
        },
        "extraArgs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "repoServer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "applicationSet": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "dex": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "redis": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "controller": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "notifications": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            },
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?m?$"
                },
                "memory": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(Mi|Gi|Ti)$"
                }
              }
            }
          }
        }
      }
    },
    "configs": {
      "type": "object",
      "properties": {
        "cm": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secret": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "params": {
          "type": "object",
          "properties": {
            "server.insecure": {
              "type": "boolean"
            },
            "server.disable.auth": {
              "type": "boolean"
            },
            "repository.credentials": {
              "type": "string"
            }
          }
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": ["Equal", "Exists"]
          },
          "value": {
            "type": "string"
          },
          "effect": {
            "type": "string",
            "enum": ["NoSchedule", "PreferNoSchedule", "NoExecute"]
          },
          "tolerationSeconds": {
            "type": "integer",
            "minimum": 0
          }
        }
      }
    },
    "affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "type": "object"
        },
        "podAffinity": {
          "type": "object"
        },
        "podAntiAffinity": {
          "type": "object"
        }
      }
    }
  }
}