# https://helm.plane.so/
# Create a argocd application for the Plane application following the same structure as other apps in this directory
{{ if .Values.plane.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: plane
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.plane.so
    chart: plane
    targetRevision: {{.Values.plane.version}}
    helm:
      values: |
        planeVersion: {{ .Values.plane.planeVersion }}
        ingress:
          enabled: {{ .Values.plane.ingress.enabled }}
          appHost: {{ .Values.plane.ingress.host }}
        redis:
          local_setup: {{ .Values.plane.redis.local_setup | default true }}
        postgres:
          local_setup: {{ .Values.plane.postgres.local_setup | default true }}
        minio:
          local_setup: {{ .Values.plane.minio.local_setup | default true }}
        env:
          {{- if not (.Values.plane.redis.local_setup | default true) }}
          remote_redis_url: {{ .Values.plane.redis.remote_url }}
          {{- end }}
          {{- if not (.Values.plane.postgres.local_setup | default true) }}
          pgdb_remote_url: {{ .Values.plane.postgres.remote_url }}
          {{- else }}
          pgdb_username: {{ .Values.plane.env.pgdb_username | default "plane" }}
          pgdb_name: {{ .Values.plane.env.pgdb_name | default "plane" }}
          {{- end }}
          {{- if not (.Values.plane.minio.local_setup | default true) }}
          aws_access_key: {{ .Values.plane.minio.aws_access_key }}
          aws_secret_access_key: {{ .Values.plane.minio.aws_secret_access_key }}
          aws_region: {{ .Values.plane.minio.aws_region }}
          aws_s3_endpoint_url: {{ .Values.plane.minio.aws_s3_endpoint_url }}
          {{- end }}
          docstore_bucket: {{ .Values.plane.env.docstore_bucket | default "uploads" }}
          secret_key: {{ .Values.plane.env.secret_key }}
          cors_allowed_origins: {{ .Values.plane.env.cors_allowed_origins | default "" }}
        web:
          replicas: {{ .Values.plane.web.replicas | default 1 }}
        api:
          replicas: {{ .Values.plane.api.replicas | default 1 }}
        worker:
          replicas: {{ .Values.plane.worker.replicas | default 1 }}
        external_secrets:
          pgdb_existingSecret: {{ .Values.plane.external_secrets.pgdb_existingSecret | default "" }}
          doc_store_existingSecret: {{ .Values.plane.external_secrets.doc_store_existingSecret | default "" }}
  destination:
    server: https://kubernetes.default.svc
    namespace: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
{{ end }}